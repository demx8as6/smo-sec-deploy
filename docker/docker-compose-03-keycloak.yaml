
services:
  keycloak-db:
    image: ${KEYCLOAK_DB_IMAGE}
    container_name: keycloak-db
    hostname: keycloak-db
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${ADMIN_USERNAME} -d keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    environment:
      - POSTGRESQL_DATABASE=keycloak
      - POSTGRESQL_USERNAME=${ADMIN_USERNAME}
      - POSTGRESQL_PASSWORD=${ADMIN_PASSWORD}
    volumes:
      - keycloak-db-data:/bitnami/postgresql
    networks:
      dmz:

  keycloak:
    image: ${KEYCLOAK_IMAGE}
    container_name: keycloak
    hostname: keycloak
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://keycloak:9000/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    environment:
      KEYCLOAK_ENABLE_HEALTH_ENDPOINTS: true
      KEYCLOAK_ADMIN: ${ADMIN_USERNAME}
      KEYCLOAK_ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      KEYCLOAK_LOG_LEVEL: ${LOG_LEVEL}
      KEYCLOAK_EXTRA_ARGS: --import-realm
      KEYCLOAK_PRODUCTION: true
      KEYCLOAK_DATABASE_USER: ${ADMIN_USERNAME}
      KEYCLOAK_DATABASE_PASSWORD: ${ADMIN_PASSWORD}
      KEYCLOAK_DATABASE_NAME: keycloak
      KEYCLOAK_DATABASE_HOST: keycloak-db
      KC_HOSTNAME: keycloak.${HTTP_DOMAIN}
      KC_HOSTNAME_URL: https://keycloak.${HTTP_DOMAIN}
      KC_HOSTNAME_ADMIN_URL: https://keycloak.${HTTP_DOMAIN}
      KC_HOSTNAME_DEBUG: true
      KC_HOSTNAME_STRICT: false
      KC_PROXY_HEADERS: xforwarded
      KC_HTTP_ENABLED: true
      KC_HTTP_PORT: 8080
    volumes:
      - ./keycloak/o-ran-sc-realm.json:/opt/bitnami/keycloak/data/import/o-ran-sc-realm.json
    labels:
      traefik.enable: true
      traefik.http.routers.keycloak.rule: Host(`keycloak.${HTTP_DOMAIN}`)
      traefik.http.routers.keycloak.entrypoints: websecure
      traefik.http.routers.keycloak.tls: true
      traefik.http.routers.keycloak.tls.options: default
      traefik.http.routers.keycloak.priority: 1
      traefik.http.services.keycloak.loadbalancer.server.port: 8080

      traefik.http.routers.keycloak-hostname-debug.rule: Host(`keycloak.${HTTP_DOMAIN}`) && Path(`/realms/master/hostname-debug`)
      traefik.http.routers.keycloak-hostname-debug.entrypoints: websecure
      traefik.http.routers.keycloak-hostname-debug.tls: true
      traefik.http.routers.keycloak-hostname-debug.tls.options: default
      traefik.http.routers.keycloak-hostname-debug.service: keycloak
      traefik.http.routers.keycloak-hostname-debug.middlewares: oauth2-auth-administration@docker
      traefik.http.routers.keycloak-hostname-debug.priority: 100

      traefik.http.middlewares.oauth2-auth-administration.forwardauth.address: http://oauth2-proxy:4180/oauth2/auth?allowed_groups=/Administration
      traefik.http.middlewares.oauth2-auth-administration.forwardauth.trustForwardHeader: true
      traefik.http.middlewares.oauth2-auth-administration.forwardauth.authResponseHeaders: X-Auth-Request-User,X-Auth-Request-Email,Authorization,Set-Cookie
      traefik.http.middlewares.oauth2-auth-administration.forwardauth.authRequestHeaders: Cookie

    depends_on:
      keycloak-db:
        condition: service_healthy
    expose:
      - 8080
    extra_hosts:
      keycloak.smo.o-ran-sc.org: 172.20.0.3
    networks:
      dmz:

volumes:
  keycloak-db-data:
